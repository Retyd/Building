/**
 * Создайте класс OfficeBuilding офисного здания.
 * Работа класса должна быть основана на двусвязном циклическом списке этажей с выделенной головой.
 * Номер офиса явно не хранится.
 * Нумерация офисов в здании сквозная и начинается с нуля.
 */
public class OfficeBuilding {	
	
    /**
	* Создайте приватный метод получения узла по его номеру.
	*/
	
	/**
	* Создайте приватный метод добавления узла в список по номеру.
	*/
	
	/**
	* Создайте приватный метод удаления узла из списка по его номеру.
	*/
	
	/**
	* Конструктор может принимать количество этажей и массив количества офисов по этажам.
	*/
	
	/**
	* Конструктор может принимать массив этажей офисного здания.
	*/
	
	/**
	* Создайте метод получения общего количества этажей здания.
	*/
	
	/**
	* Создайте метод получения общего количества офисов здания.
	*/
	
	/**
	* Создайте метод получения общей площади помещений здания.
	*/
	
	/**
	* Создайте метод получения общего количества комнат здания.
	*/
	
	/**
	* Создайте метод получения массива этажей офисного здания.
	*/
	
	/**
	* Создайте метод получения объекта этажа, по его номеру в здании.
	*/
	
	/**
	* Создайте метод изменения этажа по его номеру в здании и ссылке на обновленный этаж.
	*/
	
	/**
	* Создайте метод получения объекта офиса по его номеру в офисном здании.
	*/
	
	/**
	* Создайте метод изменения объекта офиса по его номеру в доме и ссылке типа офиса.
	*/
	
	/**
	* Создайте метод добавления офиса в здание по номеру офиса в здании и ссылке на офис.
	*/
	
	/**
	* Создайте метод удаления офиса по его номеру в здании.
	*/
	
	/**
	* Создайте метод getBestSpace() получения самого большого по площади офиса здания.
	*/
	
	/**
	* Создайте метод получения отсортированного по убыванию площадей массива офисов.
	*/
}
